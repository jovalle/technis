apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
  namespace: {{ ingress_controller_namespace }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: traefik
  namespace: {{ ingress_controller_namespace }}
  labels:
    app: traefik
spec:
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      serviceAccountName: traefik-ingress-controller
      containers:
      - name: traefik
        image: traefik:v2.3
        args:
        - --accesslog
        - --api.insecure
        - --entrypoints.traefik.Address=:9000
        - --entrypoints.web.Address=:80
        - --entrypoints.web.http.redirections.entryPoint.to=websecure
        - --entrypoints.websecure.Address=:443
        - --entrypoints.websecure.http.tls
        - --log.level=INFO
        - --metrics.prometheus=true
        - --providers.kubernetescrd
        - --providers.kubernetesingress
        ports:
        - name: web
          containerPort: 80
{% if ingress_loadbalancer_ip is not defined %}
          hostPort: 80
{% endif %}
        - name: websecure
          containerPort: 443
{% if ingress_loadbalancer_ip is not defined %}
          hostPort: 443
{% endif %}
        - name: traefik
          containerPort: 9000
{% if ingress_loadbalancer_ip is not defined %}
          hostPort: 9000
{% endif %}
---
apiVersion: traefik.containo.us/v1alpha1
kind: TLSOption
metadata:
  name: default
  namespace: default
spec:
  minVersion: VersionTLS12
{% if ingress_default_cert_secret.name is defined %}
---
apiVersion: traefik.containo.us/v1alpha1
kind: TLSStore
metadata:
  name: default
  namespace: {{ ingress_default_cert_secret.namespace }}
spec:
  defaultCertificate:
    secretName: {{ ingress_default_cert_secret.name }}
{% endif %}