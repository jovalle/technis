- name: create install dirs
  file:
    path: '{{ item }}'
    state: directory
  with_items:
  - /etc/cni/net.d
  - /opt/cni/bin

- name: check binaries
  stat:
    path: "/opt/cni/bin/tuning"
  register: bin

- name: get binaries
  unarchive:
    src: '{{ item }}'
    dest: /opt/cni/bin/
    remote_src: yes
    mode: 0755
    owner: root
    group: root
  with_items:
  - https://github.com/containernetworking/plugins/releases/download/v0.8.4/cni-plugins-{{ 'arm64' if (ansible_architecture | regex_search('arm|aarch')) else 'amd64' }}-v0.8.4.tgz
  when: bin.stat.exists == False

- name: render configs
  template:
    src: '{{ item.file }}.j2'
    dest: /etc/cni/net.d/{{ item.file }}
  with_items:
  - 10-bridge.conf
  - 99-loopback.conf

- name: check kubelet
  shell: systemctl status kubelet
  register: kubelet
  ignore_errors: yes

- name: restart kubelet
  systemd:
    name: kubelet
    state: restarted
  when: kubelet.rc == 0

- name: check kube-proxy
  shell: systemctl status kube-proxy
  register: kube_proxy
  ignore_errors: yes

- name: restart kube-proxy
  systemd:
    name: kube-proxy
    state: restarted
  when: kube_proxy.rc == 0