- name: add apt signing key for k8s
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: add apt repository for k8s
  apt_repository:
    repo: deb http://packages.cloud.google.com/apt/ kubernetes-xenial main
    state: present
  register: k8s_repository
  retries: 10
  until: k8s_repository is success

- name: install k8s packages
  apt:
    name:
    - kubelet={{ k8s_version }}-00
    - kubeadm={{ k8s_version }}-00
    - kubectl={{ k8s_version }}-00
    state: present
    force: yes
    update_cache: yes
  register: apt_install_kube
  retries: 5
  until: apt_install_kube is success

- name: add apt-mark hold to avoid version drift
  dpkg_selections:
    name: '{{ item }}'
    selection: hold
  loop:
  - kubectl
  - kubelet
  - kubeadm

- name: enable required cgroup features
  replace:
    path: /boot/cmdline.txt
    regexp: '^([\w](?!.*\b{{ item }}\b).*)$'
    replace: '\1 {{ item }}'
  loop:
  - cgroup_enable=cpuset
  - cgroup_memory=1
  - cgroup_enable=memory
  notify: reboot hosts
  when: ansible_architecture | regex_search('arm|aarch')

- name: let all the tables see bridge traffic
  sysctl:
    name: '{{ item }}'
    value: '1'
    state: present
  loop:
  - net.bridge.bridge-nf-call-iptables
  - net.bridge.bridge-nf-call-ip6tables
  - net.bridge.bridge-nf-call-arptables

- name: allow forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    state: present

- name: tweak conntrack timeouts
  sysctl:
    name: '{{ item.name }}'
    value: '{{ item.value }}'
    state: present
  loop:
  - { name: net.netfilter.nf_conntrack_tcp_timeout_established, value: 86400 }
  - { name: net.netfilter.nf_conntrack_tcp_timeout_close_wait, value: 3600 }

- name: ensure k8s directories
  file:
    path: '{{ item }}'
    state: directory
    mode: 0755
  loop:
  - ~/.kube
  - /etc/kubernetes/manifests
  - /etc/systemd/system/kubelet.service.d

- name: systemd kubelet drop-in
  copy:
    src: 12-after-docker.conf
    dest: /etc/systemd/system/kubelet.service.d/12-after-docker.conf
    mode: 0755
  notify:
  - restart kubelet

- name: add --node-ip to fix IP connectivity in vagrant clusters
  lineinfile:
    path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    insertafter: '^EnvironmentFile'
    line: Environment="KUBELET_EXTRA_ARGS=--node-ip={{ hostvars[inventory_hostname]['ansible_' + (default_interface | default('eth0'))]['ipv4']['address'] }}"
  notify:
  - restart kubelet
  when: infrastructure_provisioner == 'vagrant'

- name: ensure kubelet is running and enabled
  service:
    name: kubelet
    state: started
    enabled: yes