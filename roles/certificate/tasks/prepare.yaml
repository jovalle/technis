# - name: check cfssl
#   command: command -v cfssl
#   ignore_errors: yes
#   no_log: yes
#   register: bin

# - name: check cfssl version
#   shell: |
#     cfssl version | grep ^Version: | awk '{print $NF}'
#   register: cfssl_version_current
#   when: bin.rc == "0"

- name: install cfssl
  # get_url:
  #   url: "https://github.com/cloudflare/cfssl/releases/download/v{{ cfssl_version }}/{{ item }}_{{ cfssl_version }}_linux_{{ 'arm' if (ansible_architecture | regex_search('arm|aarch')) else 'amd64' }}"
  #   dest: "/usr/local/bin/{{ item }}"
  #   mode: 0755
  #   force: yes
  # with_items:
  #   - cfssl
  #   - cfssljson
  # when: bin.rc != "0" or (cfssl_version_current != cfssl_version | default(True) | bool)
  apt:
    name: golang-cfssl

- name: ensure target_dir exists
  file:
    path: "{{ target_dir }}"
    state: directory

- name: check for root CA certificate
  stat:
    path: "{{ target_dir }}/ca.pem"
  register: root_ca

- name: render root CA from vault
  copy:
    content: "{{ item.content }}"
    dest: "{{ item.dest }}"
  with_items:
    - { content: "{{ cert_ca_crt }}", dest: "{{ target_dir }}/ca.pem" }
    - { content: "{{ cert_ca_key }}", dest: "{{ target_dir }}/ca-key.pem" }
  when: cert_ca_crt is defined and root_ca.stat.exists == False
  no_log: yes