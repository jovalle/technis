- name: ensure strictARP is enabled in kube-proxy IPVS mode
  command: kubectl -n kube-system get configmap kube-proxy -o jsonpath='{.data.config\.conf}'
  ignore_errors: yes # kube-proxy may not exist
  register: kube_proxy_config

- name: set ipvs.strictARP to true
  shell: >
    kubectl -n kube-system get configmap kube-proxy -o yaml |
    sed -e "s/strictARP: false/strictARP: true/" |
    kubectl diff -f - -n kube-system
  ignore_errors: yes
  when: "'strictARP: true' not in kube_proxy_config.stdout_lines"

- name: deploy metallb {{ metallb_version }}
  command: '{{ item }}'
  loop:
    - kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/{{ metallb_version }}/manifests/namespace.yaml
    - kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/{{ metallb_version }}/manifests/metallb.yaml

- name: check for memberlist secret
  command: kubectl -n metallb-system get secret memberlist
  register: get_memberlist
  ignore_errors: yes

- name: generate memberlist secret
  shell: |
    kubectl -n metallb-system create secret generic memberlist --from-literal=secretkey="$(openssl rand -base64 128)"
  when: get_memberlist.rc != 0

- name: set config
  import_role:
    name: kubectl
  vars:
    source_role: metallb
    file_type: template
    target_list:
      - config.yaml