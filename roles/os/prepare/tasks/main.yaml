- name: os/prepare | set hostname
  hostname:
    name: "{{ inventory_hostname }}"

- name: os/prepare | update /etc/hostname
  shell: 'echo "{{ inventory_hostname }}" > /etc/hostname '

- name: os/prepare | update /etc/hosts
  lineinfile:
    dest: /etc/hosts
    regexp: '.*{{ item }}$'
    line: "{{ hostvars[item].ansible_host }} {{ item }}"
    state: present
  when: hostvars[item].ansible_host is defined
  with_items: "{{ groups['all'] }}"

- name: os/prepare | set selinux to permissive
  selinux:
    policy: targeted
    state: permissive
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: os/prepare | disable swap
  block:
    - shell: "swapoff -a"
    - replace:
        dest: /etc/fstab
        regexp: '^/dev/mapper/swap'
        replace: '#/dev/mapper/swap'

- name: os/prepare | enable kernel modules
  modprobe:
    name: "{{ item }}"
    state: present
  with_items:
  - br_netfilter
  - ip_vs
  - ip_vs_rr
  - ip_vs_sh
  - ip_vs_wrr
  - nf_conntrack_ipv4

- name: os/prepare | set kernel params
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    sysctl_set: yes
  with_items:
  - { name: "net.bridge.bridge-nf-call-iptables", value: '1' }
  - { name: "net.ipv4.ip_forward", value: '1' }
  - { name: "net.netfilter.nf_conntrack_tcp_timeout_close_wait", value: '3600' }
  - { name: "net.netfilter.nf_conntrack_tcp_timeout_established", value: '86400' }

- name: os/prepare | enable ntpd
  systemd:
    name: ntpd
    state: restarted
    enabled: yes
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: os/prepare | enable ntp
  systemd:
    name: ntp
    state: restarted
    enabled: yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: os/prepare | create .ssh dir if missing
  file:
    path: /root/.ssh
    mode: 700
    state: directory

- name: os/prepare | create authorized_keys if missing
  file:
    path: /root/.ssh/authorized_keys
    mode: 600
    state: touch

- name: os/prepare | render SSH authorized_keys
  lineinfile:
    path: /root/.ssh/authorized_keys
    line: "{{ ssh_public_key }}"

- name: os/prepare | render SSH key
  copy:
    dest: "/root/.ssh/id_rsa"
    content: "{{ ssh_private_key }}"
    mode: 0600

- name: os/prepare | personal touch
  lineinfile:
    path: /root/.bashrc
    line: "{{ item }}"
  with_items:
  - "set -o vi"
  - "export EDITOR=vim"
