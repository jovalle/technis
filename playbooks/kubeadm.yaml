- hosts: all
  gather_facts: yes

- hosts: etcd
  become: yes
  gather_facts: yes
  tasks:
  - setup:

- hosts: cluster
  become: yes
  gather_facts: yes
  roles:
  - kubeadm/prepare
  - { role: kubeadm/vagrant, when: infrastructure_provisioner == 'vagrant' }

- hosts: masters[0]
  become: yes
  gather_facts: yes
  vars:
    cert_ca_id: ca
    target_dir: /etc/kubernetes/pki
  roles:
  - { role: os/certificate/generate, cert_id: admin, cert_organization: "system:masters" }
  - { role: os/certificate/generate, cert_id: kube-controller-manager, cert_common_name: "system:kube-controller-manager", cert_organization: "system:kube-controller-manager" }
  - { role: os/certificate/generate, cert_id: kube-scheduler, cert_common_name: "system:kube-scheduler", cert_organization: "system:kube-scheduler" }
  - { role: os/certificate/generate, cert_id: service-account, cert_common_name: service-accounts, cert_organization: Kubernetes }
  - { role: os/certificate/generate, cert_id: kubernetes, cert_organization: Kubernetes, cert_hostname: "10.32.0.1,{% for i in groups['masters'] %}{{ hostvars[i]['ansible_' + default_interface]['ipv4']['address'] }},{% endfor %}127.0.0.1,kubernetes,kubernetes.default,kubernetes.default.svc,kubernetes.default.svc.cluster,kubernetes.svc.cluster.local,{{ k8s_api_fqdn }}" }

- hosts: masters[0]
  become: yes
  gather_facts: yes
  vars:
    cert_ca_id: etcd-ca
    cert_ca_host: "{{ groups.etcd[0] }}"
    src_dir: /etc/etcd/pki
    target_dir: /etc/kubernetes/pki
  roles:
  - { role: os/certificate/generate, cert_id: apiserver-etcd-client, cert_hostname: "{% for i in groups['etcd'] %}{{ hostvars[i]['ansible_' + default_interface]['ipv4']['address'] }},{% endfor %}127.0.0.1,localhost" }
  - kubeadm/init

- hosts: masters[1:]
  become: yes
  gather_facts: yes
  roles:
  - kubeadm/add-master

- hosts: nodes
  become: yes
  gather_facts: yes
  vars:
    cert_ca_id: ca
    cert_ca_host: "{{ groups.masters[0] }}"
    src_dir: /etc/kubernetes/pki
    target_dir: /usr/share/ca-certificates
    join_cmd: "{{ hostvars[groups['masters'][0]]['join_cmd'] }}"
  roles:
  - { role: os/certificate/generate, cert_id: apiserver-client, cert_common_name: "system:node:{{ inventory_hostname }}", cert_organization: "system:nodes", cert_hostname: "{{ inventory_hostname }},{{ hostvars[inventory_hostname]['ansible_' + default_interface]['ipv4']['address'] }}" }
  - { role: os/certificate/generate, cert_id: kube-proxy, cert_common_name: "system:kube-proxy", cert_organization: "system:node-proxier" }
  - kubeadm/add-node
