- import_playbook: k3s-uninstall.yaml
  when:
    - reset is defined
    - reset | bool

- name: render custom config for built-in traefik
  hosts: control_plane
  tasks:
    - name: ensure k3s manifests dir exists
      file:
        path: /var/lib/rancher/k3s/server/manifests/
        state: directory
    - name: override traefik helm chart
      copy:
        content: |
          apiVersion: helm.cattle.io/v1
          kind: HelmChartConfig
          metadata:
            name: traefik
            namespace: kube-system
          spec:
            valuesContent: |-
              ports:
                web:
                  redirectTo: websecure
              service:
                enabled: true
                type: LoadBalancer
                spec:
                  loadBalancerIP: "{{ ingress_endpoint | default('192.168.1.200') }}"
        dest: /var/lib/rancher/k3s/server/manifests/traefik-config.yaml
  tags:
    - control-plane

- name: deploy vip for kube-api
  import_playbook: kube-vip.yaml
  tags:
    - kube-vip

- name: initialize k3s cluster
  hosts: control_plane[0]
  pre_tasks:
    - name: validate response from kube-api
      uri:
        url: "https://{{ kube_vip_ip | default('192.168.1.100') }}:6443"
        validate_certs: no
        status_code: 401
      register: result
      ignore_errors: yes
      changed_when: result.status != 401
  tasks:
    # - INSTALL_K3S_VERSION is required for idempotency. Look to Rancher's system-upgrade-controller
    #   for upgrade paths. Changing the version + --cluster-init will cause a full restart of workloads
    #   and high risk of k8s state corruption.
    # - servicelb disabled due to conflicts with metallb
    - name: initialize k3s cluster
      shell: >
        curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ k3s_version | default('v1.22.6+k3s1') }} sh -s - server
        {% if result.changed %}--cluster-init{% else %}--server https://{{ hostvars[groups['control_plane'][0]]['ansible_' + (default_interface | default('eth0'))]['ipv4']['address'] }}:6443{% endif %}
        --tls-san "{{ kube_vip_ip | default("192.168.1.100") }}"
        --disable servicelb
        --disable metrics-server
        {% if disable_kube_proxy | default(False) | bool %}--disable-kube-proxy{% endif %}
        {% if cni_plugin | default('none') != 'none' %}
        --disable-network-policy
        --flannel-backend=none
        {% endif %}
        --token technis
      retries: 2
      delay: 15
      register: init
    - debug:
        var: init
  tags:
    - cluster-init

- name: add control plane nodes to cluster
  hosts: control_plane[1:]
  serial: 1
  vars:
    control_plane_leader: "{{ groups['control_plane'][0] }}"
  pre_tasks:
    - name: Gather facts from all cluster hosts (regardless of limit or tags)
      setup:
      delegate_to: "{{ item }}"
      delegate_facts: True
      when: hostvars[item]['ansible_default_ipv4'] is not defined
      with_items: "{{ groups['cluster'] }}"
  tasks:
    - name: join control plane nodes
      shell: >
        curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ k3s_version | default('v1.22.6+k3s1') }} sh -s - server
        --server https://{{ hostvars[control_plane_leader]['ansible_' + (default_interface | default('eth0'))]['ipv4']['address'] }}:6443
        --tls-san "{{ kube_vip_ip | default("192.168.1.100") }}"
        --disable servicelb
        --disable metrics-server
        {% if disable_kube_proxy | default(False) | bool %}--disable-kube-proxy{% endif %}
        {% if cni_plugin | default('none') != 'none' %}
        --disable-network-policy
        --flannel-backend=none
        {% endif %}
        --token technis
      retries: 2
      delay: 15
      ignore_errors: yes
      register: join_control_plane
    - debug:
        var: join_control_plane.stdout_lines
  tags:
    - control-plane

- hosts: control_plane
  tasks:
    - name: default to k3s kubeconfig
      block:
        - name: clean slate
          file:
            path: ~/.kube/config
            state: absent
        - name: create kubeconfig dir
          file:
            path: ~/.kube/
            state: directory
        - name: create a symbolic link
          file:
            src: /etc/rancher/k3s/k3s.yaml
            dest: ~/.kube/config
            state: link
  tags:
    - control-plane
    - kubeconfig

- name: add worker nodes to cluster
  hosts: nodes
  tasks:
    - name: join nodes
      shell: >
        curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ k3s_version | default('v1.22.6+k3s1') }} K3S_URL=https://{{ kube_vip_ip | default('192.168.1.100')}}:6443 K3S_TOKEN=technis sh -s -
      retries: 2
      delay: 15
      register: join_nodes
    - debug:
        var: join_nodes.stdout_lines
  tags:
    - nodes
