- hosts: control_plane
  pre_tasks:
    - name: ensure manifests directory exists
      file:
        path: /var/lib/rancher/k3s/server/manifests/
        state: directory
  tasks:
    - name: get RBAC
      get_url:
        url: https://kube-vip.io/manifests/rbac.yaml
        dest: /var/lib/rancher/k3s/server/manifests/rbac.yaml
    - name: generate manifest
      shell: >
        curl -sL kube-vip.io/k3s | vipAddress={{ kube_vip_ip | default('192.168.1.100') }} vipInterface=eth0 sh | sudo tee /var/lib/rancher/k3s/server/manifests/vip.yaml
    - name: get latest version of kube-vip
      shell: >
        curl -sL https://api.github.com/repos/kube-vip/kube-vip/releases | jq -r ".[0].name"
      register: kube_vip_latest
    - name: set version
      set_fact:
        kube_vip_version: "{{ kube_vip_latest.stdout }}"
    - name: pull kube-vip image on containerd
      command: ctr image pull ghcr.io/kube-vip/kube-vip:{{ kube_vip_version }}
      when: >
        cri_plugin | default('containerd.io') == 'containerd.io' or
        cri_plugin | default('containerd.io') == 'containerd'
    - name: deploy kube-vip on containerd
      shell: >
        ctr run --rm --net-host ghcr.io/kube-vip/kube-vip:{{ kube_vip_version }} vip /kube-vip manifest daemonset
        --interface eth0
        --vip {{ kube_vip_ip | default('192.168.1.100') }}
        --controlplane
        --services
        --inCluster
        --taint
        --arp
      when: >
        cri_plugin | default('containerd.io') == 'containerd.io' or
        cri_plugin | default('containerd.io') == 'containerd'
    - name: deploy kube-vip on docker
      shell: >
        docker run --network host --rm ghcr.io/kube-vip/kube-vip:{{ kube_vip_version }} manifest daemonset
        --interface eth0
        --vip {{ kube_vip_ip | default('192.168.1.100') }}
        --controlplane
        --services
        --inCluster
        --taint
        --arp
      when: cri_plugin | default('containerd.io') == 'docker'