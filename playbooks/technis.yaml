- hosts: cluster
  ignore_unreachable: yes
  pre_tasks:
    - name: check for existing cluster
      block:
        - name: gather facts from cluster hosts
          ansible.builtin.setup:
          delegate_to: "{{ item }}"
          delegate_facts: true
          loop: "{{ groups['cluster'] }}"

        - name: check for ready nodes
          shell: k3s kubectl get nodes --no-headers | grep -v NotReady | wc -l
          changed_when: k3s_ready_nodes | int > 0
          delegate_to: "{{ item }}"
          delegate_facts: true
          loop: "{{ groups['cluster'] }}"
          register: k3s_ready_nodes

        - name: update fact
          set_fact:
            k3s_existing_cluster: yes
          with_items: "{{ k3s_ready_nodes.results }}"
          when: item.stdout | int > 0

      tags: ['always']

  roles:
    - name: k3s/reset
      when:
        - reset is defined
        - reset | default('no') | bool

    # Prepare nodes for respective role
    - name: common
      tags: ['common']

    # Install fail2ban to protect via SSH
    - name: fail2ban
      tags: ['fail2ban', 'ssh']

    # Install container runtime
    - name: cri
      tags: ['cri']

    # Install helm for simplifying Kubernetes app rollouts
    - name: helm
      tags: ['helm']

    # Install K3s
    - name: k3s
      tags: ['k3s']

    # Configure GPU (+update container runtime accordingly)
    - name: gpu
      tags: ['gpu']

    # Install container networking interface plugin
    - name: cni
      tags: ['cni']

    # Auto manage certificates
    - name: cert-manager
      tags: ['cert-manager']

    # Install persistent storage provider
    - name: storage
      vars:
        storage_providers: ['longhorn']
      tags: ['storage']

    # Deploy kube-prometheus stack
    - name: monitoring
      tags: ['monitoring']