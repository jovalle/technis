---

- hosts: localhost
  tasks:
  - name: get list of existing kind clusters
    command: kind get clusters
    register: clusters
  - name: deploy kind with custom config
    block:
    - name: overwrite kind cluster
      command: kubectl delete cluster --name kind
      when:
      - "'kind' in (clusters.stdout_lines | list)"
      - force | default("no") | bool
    - name: create a temp dir
      tempfile:
        state: directory
      register: temp_dir
    - name: render kind config
      shell: |
        cat << EOF > {{ temp_dir.path }}/config.yaml
          kind: Cluster
          apiVersion: kind.x-k8s.io/v1alpha4
          networking:
            disableDefaultCNI: true
            podSubnet: 100.50.25.0/16
          nodes:
          - role: control-plane
          - role: control-plane
          - role: control-plane
          - role: worker
          - role: worker
          - role: worker
          - role: worker
            kubeadmConfigPatches:
            - |
              kind: InitConfiguration
              nodeRegistration:
                kubeletExtraArgs:
                  node-labels: "ingress-ready=true"
            extraPortMappings:
            - containerPort: 80
              hostPort: 80
              listenAddress: "0.0.0.0"
            - containerPort: 443
              hostPort: 443
              listenAddress: "0.0.0.0"
        EOF
    - name: deploy kind cluster
      command: kind create cluster --config={{ temp_dir.path }}/config.yaml
    always:
    - name: delete temp config file
      file:
        path: "{{ temp_dir.path }}/config.yaml"
        state: absent
    when: "'kind' not in (clusters.stdout_lines | list) or (force | default('no') | bool)"
  - name: change context to kind cluster
    command: kubectl config use-context kind
    register: change_ctx
    until: change_ctx.rc == 0
    retries: 5
  - name: get cluster info
    command: kubectl cluster-info
    register: cluster_info
    until: cluster_info.rc == 0
    retries: 5
  - name: deploy calico CNI
    command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
  - name: disable RPF check in calico # thanks alexbrand
    command: kubectl -n kube-system set env daemonset/calico-node FELIX_IGNORELOOSERPF=true
  - name: get cluster node count for ds check
    shell: kubectl get nodes --no-headers | wc -l | xargs
    register: cluster_node_count
    until: cluster_node_count.stdout > 0
    retries: 5
  - name: wait for calico-node ds readiness
    command: kubectl -n kube-system get daemonset/calico-node -o jsonpath='{.status.numberReady}'
    register: calico_node_ds_ready_count
    until: calico_node_ds_ready_count.stdout == cluster_node_count.stdout
    retries: 5
