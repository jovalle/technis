packer {
  required_version = ">= 1.7.0"
  required_plugins {
    vsphere = {
      version = ">= 1.0.6"
      source  = "github.com/hashicorp/vsphere"
    }
  }
}

source "vsphere-iso" "ubuntu" {

  # Builder
  communicator             = "ssh"
  configuration_parameters = {
    "disk.EnableUUID" = "true"
  }
  convert_to_template      = "true"
  ssh_handshake_attempts   = "100"
  ssh_password             = "{{ cloud_init_ssh_password }}"
  ssh_timeout              = "30m"
  ssh_username             = "{{ cloud_init_ssh_username }}"

  # vSphere
  cluster               = "{{ vsphere_cluster }}"
  datacenter            = "{{ vsphere_datacenter }}"
  datastore             = "{{ vsphere_datastore }}"
  folder                = "{{ vsphere_folder }}"
  insecure_connection   = "true"
  password              = "{{ vsphere_password }}"
  resource_pool         = "{{ vsphere_resource_pool }}"
  username              = "{{ vsphere_username }}"
  vcenter_server        = "{{ vsphere_server }}"

  # VM
  CPUs                  = "{{ vm_cpu }}"
  RAM                   = "{{ vm_mem }}"
  RAM_reserve_all       = "true"
  boot_command          = [
    "c<wait>",
    "linux /casper/vmlinuz --- autoinstall ds=\"nocloud-net\"",
    "<enter><wait>",
    "initrd /casper/initrd",
    "<enter><wait>",
    "boot",
    "<enter>"
  ]
  boot_wait             = "3s"
  cd_content            = {
    "meta-data" = file("./http/meta-data")
    "user-data" = file("./http/user-data")
  }
  cd_label              = "cidata"
  disk_controller_type  = ["pvscsi"]
  guest_os_type         = "{{ vm_guest_os_type }}"
  iso_checksum          = "{{ vm_iso_checksum }}"
  iso_url               = "{{ vm_iso_url }}"
  network_adapters {
    network             = "{{ vm_network }}"
    network_card        = "vmxnet3"
  }
  shutdown_command      = "echo '{{ cloud_init_ssh_password }}' | sudo -S -E shutdown -P now"
  shutdown_timeout      = "15m"
  storage {
    disk_size             = "{{ vm_disk_size }}"
    disk_thin_provisioned = true
  }
  vm_name               = "{{ vm_name }}"
}

build {
  sources = ["source.vsphere-iso.ubuntu"]

  provisioner "shell" {
    environment_vars = [
      "BUILD_USERNAME={{ cloud_init_ssh_username }}",
    ]
    execute_command = "echo '{{ cloud_init_ssh_password }}' | {% raw %}{{.Vars}} sudo -S -E bash '{{.Path}}{% endraw %}'"
    expect_disconnect = true
    scripts = ["./setup.sh"]
  }
}
