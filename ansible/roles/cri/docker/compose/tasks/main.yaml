# Define docker compose data in inventory
# group_vars/all/technis.yaml:
#   docker_compose_services:
#     - name: pihole
#       image: pihole/pihole:latest
#       environment:
#         WEBPASSWORD: "{{ pihole_admin_pass }}"
#       volumes:
#         - './etc-pihole:/etc/pihole'
#         - './etc-dnsmasq.d:/etc/dnsmasq.d'
#       network_mode: host
#       cap_add:
#         - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
#     - name: cloudflared
#       image: docker.io/cloudflare/cloudflared:latest
#       command: tunnel --no-autoupdate run --token {{ cloudflared_token }}

- name: install docker-compose
  package:
    name: docker-compose

- name: ensure docker compose services are defined
  fail:
    msg: "docker_compose_services not defined or contains zero services"
  when: docker_compose_services is not defined or docker_compose_services | length == 0

- name: ensure dir exists
  file:
    path: /etc/technis
    state: directory

- name: render env vars file for technis.service
  copy:
    content: |
      # Ansible managed
      PGID=1000
      PUID=1000
      TZ="America/New_York"
    dest: /etc/technis/.env

- name: create systemd unit for maintaining docker compose services
  template:
    src: technis.service.j2
    dest: /etc/systemd/system/technis.service

- name: render docker-compose.yaml
  template:
    src: docker-compose.yaml.j2
    dest: /etc/technis/docker-compose.yaml

- name: start service
  systemd:
    name: technis
    state: started
    enabled: true