# Based on output from `helm template influxdb2 --values values.yaml influxdata/influxdb2`
# values.yaml:
# ```yaml
# adminUser:
#   existingSecret: influxdb-auth
# ```
# We do not use the ingress values param due to the outdated API version
# We append namespace to each generated resource due to omission with `helm template --namespace...`
---
# Source: influxdb2/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: influxdb2
  namespace: monitoring
  labels:
    app.kubernetes.io/name: influxdb2
    app.kubernetes.io/instance: influxdb2
    app.kubernetes.io/version: "2.7.4"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: influxdb2-2.1.2
---
# Source: influxdb2/templates/persistent-volume-claim.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: "influxdb2"
  namespace: monitoring
  labels:
    app.kubernetes.io/name: influxdb2
    app.kubernetes.io/instance: influxdb2
    app.kubernetes.io/version: "2.7.4"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: influxdb2-2.1.2
  annotations:
    helm.sh/resource-policy: "keep"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "50Gi"
---
# Source: influxdb2/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: influxdb2
  namespace: monitoring
  labels:
    app.kubernetes.io/name: influxdb2
    app.kubernetes.io/instance: influxdb2
    app.kubernetes.io/version: "2.7.4"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: influxdb2-2.1.2
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8086
      protocol: TCP
  selector:
    app.kubernetes.io/name: influxdb2
    app.kubernetes.io/instance: influxdb2
---
# Source: influxdb2/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: influxdb2
  namespace: monitoring
  labels:
    app.kubernetes.io/name: influxdb2
    app.kubernetes.io/instance: influxdb2
    app.kubernetes.io/version: "2.7.4"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: influxdb2-2.1.2
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: influxdb2
      app.kubernetes.io/instance: influxdb2
  serviceName: "influxdb2"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: influxdb2
        app.kubernetes.io/instance: influxdb2
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: influxdb2
      serviceAccountName: influxdb2
      containers:
        - name: influxdb2
          image: "influxdb:2.7.4-alpine"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8086
              protocol: TCP
          env:
            # Automated setup will not run if an existing boltdb file is found at the configured path.
            # This behavior allows for the InfluxDB container to reboot post-setup without encountering "DB is already set up" errors.
            - name: DOCKER_INFLUXDB_INIT_MODE
              value: setup
            # The username to set for the system's initial super-user (Required).
            - name: DOCKER_INFLUXDB_INIT_USERNAME
              value: admin
            # The password to set for the system's inital super-user (Required).
            - name: DOCKER_INFLUXDB_INIT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: influxdb-auth
                  key: admin-password
            # The name to set for the system's initial organization (Required).
            - name: DOCKER_INFLUXDB_INIT_ORG
              value: technis
            # The name to set for the system's initial bucket (Required).
            - name: DOCKER_INFLUXDB_INIT_BUCKET
              value: monitoring
            # The duration the system's initial bucket should retain data. If not set, the initial bucket will retain data forever.
            - name: DOCKER_INFLUXDB_INIT_RETENTION
              value: 0s
            # The authentication token to associate with the system's initial super-user. If not set, a token will be auto-generated by the system.
            - name: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
              valueFrom:
                secretKeyRef:
                  name: influxdb-auth
                  key: admin-token
            # Path to the BoltDB database.
            - name: INFLUXD_BOLT_PATH
              value: /var/lib/influxdb2/influxd.bolt
            # Path to persistent storage engine files where InfluxDB stores all Time-Structure Merge Tree (TSM) data on disk.
            - name: INFLUXD_ENGINE_PATH
              value: /var/lib/influxdb2
          livenessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
          - name: data
            mountPath: /var/lib/influxdb2
            subPath:
          resources:
            {}
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  labels:
    app: influxdb2
  name: influxdb2
  namespace: monitoring
spec:
  rules:
  - host: influxdb2.techn.is
    http:
      paths:
      - backend:
          service:
            name: influxdb2
            port:
              number: 8086
        path: /
        pathType: Prefix
