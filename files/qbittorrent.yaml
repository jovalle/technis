apiVersion: v1
kind: Namespace
metadata:
  name: qbittorrent
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: qbittorrent-config
  namespace: qbittorrent
data:
  PUID: "1000"
  PGID: "1000"
  UMASK: "002"
  WEBUI_PORT: "8080"
  VPN_ENABLED: "yes"
  LAN_NETWORK: "192.168.1.0/24"
  NAME_SERVERS: "1.1.1.1,8.8.8.8"
  KUBERNETES_ENABLED: "yes"
  POD_NETWORK: "10.244.0.0/16"
  SVC_NETWORK: "10.96.0.0/16"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: qbittorrent-pvc
  namespace: qbittorrent
  labels:
    app: qbittorrent
    tier: watchtower
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qbittorrent
  namespace: qbittorrent
  labels:
    app: qbittorrent
    tier: watchtower
spec:
  replicas: 1
  selector:
    matchLabels:
      app: qbittorrent
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: qbittorrent
        tier: watchtower
    spec:
      nodeSelector:
        techn.is/role: watchtower
      initContainers:
      - name: openvpn-setup
        image: busybox
        command:
        - sh
        - "-c"
        - |
          /bin/sh <<EOF
          wget -qO- https://www.privateinternetaccess.com/openvpn/openvpn.zip | unzip - "us_new_york.ovpn" -d /config/openvpn/
          EOF
        volumeMounts:
        - name: config
          mountPath: /config
      containers:
      - name: qbittorrent
        image: jovalle/qbittorrent-openvpn:v0.2.0
        imagePullPolicy: Always
        env:
        - name: VPN_USERNAME
          valueFrom:
            secretKeyRef:
              name: openvpn
              key: username
        - name: VPN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: openvpn
              key: password
        envFrom:
        - configMapRef:
            name: qbittorrent-config
            optional: false
        ports:
        - containerPort: 8080
        - containerPort: 8999
        - containerPort: 8999
          protocol: UDP
        securityContext:
          privileged: true
          capabilities:
            add:
            - NET_ADMIN
        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: /downloads
          name: downloads
        - name: tunnel
          mountPath: /dev/net/tun
        - name: localtime
          mountPath: /etc/localtime
          readOnly: true
        livenessProbe:
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 5
          exec:
            command:
            - ping
            - "-c 1"
            - "-W 1"
            - 1.1.1.1
        readinessProbe:
          initialDelaySeconds: 60
          periodSeconds: 5
          timeoutSeconds: 5
          tcpSocket:
            port: 8080
        resources:
          requests:
            cpu: 100m
            memory: 500Mi
          limits:
            cpu: 1000m
            memory: 2000Mi
      restartPolicy: Always
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: qbittorrent-pvc
      - name: downloads
        nfs:
          path: /hulkpool/downloads
          server: cerberus.techn.is
      - name: tunnel
        hostPath:
          path: /dev/net/tun
          type: ""
      - name: localtime
        hostPath:
          path: /etc/localtime
          type: ""
---
apiVersion: v1
kind: Service
metadata:
  name: qbittorrent
  namespace: qbittorrent
  labels:
    app: qbittorrent
    tier: watchtower
spec:
  selector:
    app: qbittorrent
  ports:
  - port: 8080
    protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: qbittorrent
  namespace: qbittorrent
  labels:
    app: qbittorrent
    tier: watchtower
spec:
  rules:
  - host: qbittorrent.k8s.techn.is
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: qbittorrent
            port:
              number: 8080