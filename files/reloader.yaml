---
kind: ServiceAccount
apiVersion: v1
metadata:
  labels:
    app: reloader
  name: reloader
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app: reloader
  name: reloader
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
      - configmaps
    verbs:
      - list
      - get
      - watch
  - apiGroups:
      - "apps"
    resources:
      - deployments
      - daemonsets
      - statefulsets
    verbs:
      - list
      - get
      - update
      - patch
  - apiGroups:
      - "extensions"
    resources:
      - deployments
      - daemonsets
    verbs:
      - list
      - get
      - update
      - patch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app: reloader
  name: reloader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: reloader
subjects:
  - kind: ServiceAccount
    name: reloader
    namespace: kube-system
---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: reloader
  name: reloader
  namespace: kube-system
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: reloader
  template:
    metadata:
      labels:
        app: reloader
    spec:
      containers:
        - image: stakater/reloader:v0.0.117
          imagePullPolicy: IfNotPresent
          name: reloader
          ports:
            - name: http
              containerPort: 9090
          livenessProbe:
            httpGet:
              path: /metrics
              port: http
            timeoutSeconds: 5
            failureThreshold: 5
            periodSeconds: 10
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /metrics
              port: http
            timeoutSeconds: 5
            failureThreshold: 5
            periodSeconds: 10
            successThreshold: 1
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: reloader
